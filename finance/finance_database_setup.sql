USE ROLE USERADMIN;
CREATE USER IF NOT EXISTS FINANCE_SERVICE
TYPE = SERVICE; --noqa: JJ01,PRS,TMP
CREATE ROLE IF NOT EXISTS FINANCE_ADMIN;
CREATE ROLE IF NOT EXISTS FINANCE_ANALYST;

USE ROLE SYSADMIN;
CREATE DATABASE IF NOT EXISTS FINANCE;
CREATE DATABASE ROLE IF NOT EXISTS FINANCE.FINANCE_ALL_ADMIN;
CREATE DATABASE ROLE IF NOT EXISTS FINANCE.FINANCE_ALL_READ_ONLY;

USE DATABASE FINANCE;

USE ROLE SECURITYADMIN;
GRANT ROLE FINANCE_ADMIN TO USER "thomas.yu@sagebase.org";
GRANT ROLE FINANCE_ANALYST TO USER "thomas.yu@sagebase.org";
GRANT ROLE FINANCE_ANALYST TO USER "brandon.morgan@sagebase.org";
GRANT ROLE FINANCE_ANALYST TO USER "andrea.varsavsky@sagebase.org";
GRANT ROLE FINANCE_ADMIN TO USER FINANCE_SERVICE;
-- Grant ownership of the database roles to the database admin
GRANT OWNERSHIP
    ON DATABASE ROLE FINANCE.FINANCE_ALL_ADMIN
    TO ROLE FINANCE_ADMIN; --noqa: JJ01,PRS,TMP

-- Grant database roles to account roles
GRANT DATABASE ROLE FINANCE.FINANCE_ALL_ADMIN
    TO ROLE FINANCE_ADMIN; --noqa: JJ01,PRS,TMP
GRANT DATABASE ROLE FINANCE.FINANCE_ALL_READ_ONLY
    TO ROLE FINANCE_ANALYST;

// finance analyst grants
GRANT USAGE ON DATABASE FINANCE TO DATABASE ROLE FINANCE.FINANCE_ALL_ADMIN;
GRANT USAGE ON DATABASE FINANCE TO DATABASE ROLE FINANCE.FINANCE_ALL_READ_ONLY;

GRANT USAGE ON FUTURE SCHEMAS IN DATABASE FINANCE TO DATABASE ROLE FINANCE.FINANCE_ALL_READ_ONLY;
GRANT SELECT ON FUTURE TABLES IN DATABASE FINANCE TO DATABASE ROLE FINANCE.FINANCE_ALL_READ_ONLY;
GRANT SELECT ON FUTURE VIEWS IN DATABASE FINANCE TO DATABASE ROLE FINANCE.FINANCE_ALL_READ_ONLY;
GRANT SELECT ON FUTURE DYNAMIC TABLES IN DATABASE FINANCE TO DATABASE ROLE FINANCE.FINANCE_ALL_READ_ONLY;
GRANT SELECT ON FUTURE MATERIALIZED VIEWS IN DATABASE FINANCE TO DATABASE ROLE FINANCE.FINANCE_ALL_READ_ONLY;

GRANT OWNERSHIP
	ON DATABASE FINANCE
	TO ROLE FINANCE_ADMIN
	COPY CURRENT GRANTS;

// finance all admin grants
GRANT OWNERSHIP
	ON FUTURE SCHEMAS
    IN DATABASE FINANCE
	TO DATABASE ROLE FINANCE.FINANCE_ALL_ADMIN;
GRANT OWNERSHIP
	ON FUTURE TABLES
	IN DATABASE FINANCE
	TO DATABASE ROLE FINANCE.FINANCE_ALL_ADMIN;
GRANT OWNERSHIP
	ON FUTURE DYNAMIC TABLES
	IN DATABASE FINANCE
	TO DATABASE ROLE FINANCE.FINANCE_ALL_ADMIN;
GRANT OWNERSHIP
	ON FUTURE STAGES
	IN DATABASE FINANCE
	TO DATABASE ROLE FINANCE.FINANCE_ALL_ADMIN;
GRANT OWNERSHIP
	ON FUTURE VIEWS
	IN DATABASE FINANCE
	TO DATABASE ROLE FINANCE.FINANCE_ALL_ADMIN;
GRANT OWNERSHIP
	ON FUTURE MATERIALIZED VIEWS
	IN DATABASE FINANCE
	TO DATABASE ROLE FINANCE.FINANCE_ALL_ADMIN;
GRANT OWNERSHIP
	ON FUTURE TASKS
	IN DATABASE FINANCE
	TO DATABASE ROLE FINANCE.FINANCE_ALL_ADMIN;

USE ROLE FINANCE_ADMIN;

CREATE SCHEMA IF NOT EXISTS FINANCE.MIP_RAW
    WITH MANAGED ACCESS
    COMMENT = 'This schema contains tables with raw data from ELT from MIP system';

CREATE SCHEMA IF NOT EXISTS FINANCE.MIP_EXPLORATION
    WITH MANAGED ACCESS
    COMMENT = 'This schema allows FINANCE_ANALYST role to write tables/views/etc';
CREATE DATABASE ROLE IF NOT EXISTS FINANCE.FINANCE_MIP_EXPLORATION_WRITE;

USE ROLE SECURITYADMIN;

GRANT DATABASE ROLE FINANCE.FINANCE_MIP_EXPLORATION_WRITE
    TO ROLE FINANCE_ANALYST;

GRANT USAGE ON DATABASE FINANCE TO DATABASE ROLE FINANCE.FINANCE_MIP_EXPLORATION_WRITE;
GRANT CREATE TABLE, CREATE VIEW, CREATE MATERIALIZED VIEW, CREATE DYNAMIC TABLE, USAGE
  ON SCHEMA FINANCE.MIP_EXPLORATION
  TO DATABASE ROLE FINANCE.FINANCE_MIP_EXPLORATION_WRITE;
