name: "Configure Snowflake CLI"
description: "Configures a ~/.snowflake/config.toml file and install the Snowflake CLI"
inputs:
  PRIVATE_KEY_PASSPHRASE:
    description: "The pass phrase used to decrypt the private key"
    required: true
  PRIVATE_KEY:
    description: "The private key"
    required: true
  ACCOUNT:
    description: "Snowflake account identifier"
    required: true
  USER:
    description: "Snowflake user identifier"
    required: true
  WAREHOUSE:
    description: "Snowflake warehouse"
    required: false
    default: ""
outputs:
  config-file-path:
    description: "The path to the Snowflake config.toml file"
    value: ${{ steps.configure-snowflake.outputs.config-file-path }}
  version:
    description: A plain text description of the Snowflake CLI version
    value: ${{ steps.connection-test.outputs.version }}
  connection:
    description: >
      A pretty-printed description of the default Snowflake connection
      encoded using base64. Decode using `base64 --decode`.
    value: ${{ steps.connection-test.outputs.connection }}

runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Create config.toml file
      shell: bash
      id: configure-snowflake
      run: |
        # Create temporary files for config.toml and our private key
        mkdir -p $HOME/.snowflake
        CONFIG_FILE=$HOME/.snowflake/config.toml
        PRIVATE_KEY_FILE=$HOME/.snowflake/rsa_key.p8
      
        # Write to the private key file
        printf "%s" "${{ inputs.PRIVATE_KEY }}" > $PRIVATE_KEY_FILE
            
        # Write to config.toml file
        echo 'default_connection_name = "default"' >> $CONFIG_FILE
        echo '[connections.default]' >> $CONFIG_FILE
        echo "account = \"${{ inputs.ACCOUNT }}\"" >> $CONFIG_FILE
        echo "user = \"${{ inputs.USER }}\"" >> $CONFIG_FILE
        echo 'warehouse = "${{ inputs.WAREHOUSE }}"' >> $CONFIG_FILE
        echo 'authenticator = "SNOWFLAKE_JWT"' >> $CONFIG_FILE
        echo "private_key_path = \"$PRIVATE_KEY_FILE\"" >> $CONFIG_FILE

        # Restrict file owner read/write only (Snowflake requirement)
        chmod 0600 $CONFIG_FILE

        # Make config.toml path available to other steps
        echo "CONFIG_FILE=$CONFIG_FILE" >> $GITHUB_ENV
        echo "config-file-path=$CONFIG_FILE" >> $GITHUB_OUTPUT

    - name: Verify configuration file contents
      shell: bash
      run: |
        echo "Snowflake configuration is located at $CONFIG_FILE"
        cat $CONFIG_FILE
        
    - name: Install Snowflake CLI
      uses: Snowflake-Labs/snowflake-cli-action@v1.5

    - name: Test Snowflake connection
      id: connection-test
      shell: bash
      env:
        PRIVATE_KEY_PASSPHRASE: ${{ inputs.PRIVATE_KEY_PASSPHRASE }}
      run: |
        snow --version
        snow connection test

        echo "version=$(snow --version)" >> $GITHUB_OUTPUT
        echo "connection=$(snow connection test | base64 --wrap=0)" >> $GITHUB_OUTPUT
        
