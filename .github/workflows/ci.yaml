name: CI

on:
  # Triggers the workflow on any branch or tag commit
  push:
    paths-ignore:
      - '*.tf'
      - 'transforms/*'
      - 'analytics/*'
      - 'README.md'
      - 'recover/*'
      - 'sage/*'
    branches:
      - "main"
      - "dev"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  schemachange_synapse_data_warehouse_dev:
    runs-on: ubuntu-22.04
    if: github.ref_name == 'dev'
    environment: dev
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure Snowflake
        uses: ./.github/actions/configure-snowflake-cli
        with:
          PRIVATE_KEY_PASSPHRASE: ${{ secrets.ADMIN_SERVICE_PASS_PHRASE }}
          PRIVATE_KEY: ${{ secrets.ADMIN_SERVICE_PRIVATE_KEY }}
          ACCOUNT: ${{ secrets.SNOWSQL_ACCOUNT }}
          USER: ${{ vars.ADMIN_SERVICE_USER }}
          WAREHOUSE: ${{ secrets.SNOWSQL_WAREHOUSE }}

      - name: deploy synapse_data_warehouse
        shell: bash
        env:
          SNOWFLAKE_SYNAPSE_DATA_WAREHOUSE_DATABASE: ${{ vars.SNOWFLAKE_SYNAPSE_DATA_WAREHOUSE_DATABASE }}
          SNOWFLAKE_SYNAPSE_STAGE_STORAGE_INTEGRATION: ${{ vars.SNOWFLAKE_SYNAPSE_STAGE_STORAGE_INTEGRATION }}
          SNOWFLAKE_SYNAPSE_STAGE_URL: ${{ vars.SNOWFLAKE_SYNAPSE_STAGE_URL }}
          STACK: ${{ vars.STACK }}
        run: |
          schemachange \
            --connection-name default \
            --root-folder synapse_data_warehouse \
            --config-folder synapse_data_warehouse \
            --snowflake-role synapse_data_warehouse_dev

  schemachange_synapse_data_warehouse_prod:
    runs-on: ubuntu-22.04
    if: github.ref_name == 'main'
    environment: prod
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure Snowflake
        uses: ./.github/actions/configure-snowflake-cli
        with:
          PRIVATE_KEY_PASSPHRASE: ${{ secrets.ADMIN_SERVICE_PASS_PHRASE }}
          PRIVATE_KEY: ${{ secrets.ADMIN_SERVICE_PRIVATE_KEY }}
          ACCOUNT: ${{ secrets.SNOWSQL_ACCOUNT }}
          USER: ${{ vars.ADMIN_SERVICE_USER }}
          WAREHOUSE: ${{ secrets.SNOWSQL_WAREHOUSE }}

      - name: Deploy synapse_data_warehouse
        shell: bash
        env:
          SNOWFLAKE_SYNAPSE_DATA_WAREHOUSE_DATABASE: ${{ vars.SNOWFLAKE_SYNAPSE_DATA_WAREHOUSE_DATABASE }}
          SNOWFLAKE_SYNAPSE_STAGE_STORAGE_INTEGRATION: ${{ vars.SNOWFLAKE_SYNAPSE_STAGE_STORAGE_INTEGRATION }}
          SNOWFLAKE_SYNAPSE_STAGE_URL: ${{ vars.SNOWFLAKE_SYNAPSE_STAGE_URL }}
          STACK: ${{ vars.STACK }}
        run: |
          schemachange \
            --connection-name default \
            --root-folder synapse_data_warehouse \
            --config-folder synapse_data_warehouse \
            --snowflake-role synapse_data_warehouse_admin

  schemachange_admin:
    runs-on: ubuntu-22.04
    needs: schemachange_synapse_data_warehouse_prod
    if: github.ref_name == 'main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure Snowflake
        uses: ./.github/actions/configure-snowflake-cli
        with:
          PRIVATE_KEY_PASSPHRASE: ${{ secrets.ADMIN_SERVICE_PASS_PHRASE }}
          PRIVATE_KEY: ${{ secrets.ADMIN_SERVICE_PRIVATE_KEY }}
          ACCOUNT: ${{ secrets.SNOWSQL_ACCOUNT }}
          USER: ${{ vars.ADMIN_SERVICE_USER }}
          WAREHOUSE: ${{ secrets.SNOWSQL_WAREHOUSE }}

      - name: Deploy warehouses
        shell: bash
        run: |
          schemachange \
            --connection-name default \
            --root-folder admin/warehouses \
            --snowflake-role SYSADMIN

      - name: Deploy policies
        shell: bash
        run: |
          schemachange \
            --connection-name default \
            --root-folder admin/policies \
            --snowflake-role ACCOUNTADMIN

      - name: Deploy ownership grants 
        shell: bash
        run: |
          schemachange \
            --connection-name default \
            --root-folder admin/ownership_grants \
            --snowflake-role SECURITYADMIN

      - name: Deploy future grants 
        shell: bash
        run: |
          schemachange \
            --connection-name default \
            --root-folder admin/future_grants \
            --snowflake-role SECURITYADMIN

  snowsql_admin:
    runs-on: ubuntu-22.04
    needs: schemachange_admin
    if: github.ref_name == 'main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure Snowflake
        uses: ./.github/actions/configure-snowflake-cli
        with:
          PRIVATE_KEY_PASSPHRASE: ${{ secrets.ADMIN_SERVICE_PASS_PHRASE }}
          PRIVATE_KEY: ${{ secrets.ADMIN_SERVICE_PRIVATE_KEY }}
          ACCOUNT: ${{ secrets.SNOWSQL_ACCOUNT }}
          USER: ${{ vars.ADMIN_SERVICE_USER }}
          WAREHOUSE: ${{ secrets.SNOWSQL_WAREHOUSE }}

      - name: Create users
        run: snow sql -f admin/users.sql

      - name: Create roles
        run: snow sql -f admin/roles.sql

      - name: Create databases
        run: snow sql -f admin/databases.sql

      - name: Create integrations
        run: |
          snow sql -f admin/integrations.sql \
            --variable saml2_issuer="${{ secrets.SAML2_ISSUER }}" \
            --variable saml2_sso_url="${{ secrets.SAML2_SSO_URL }}" \
            --variable saml2_x509_cert="${{ secrets.SAML2_X509_CERT }}"

      - name: Grant privileges
        run: snow sql -f admin/grants.sql
